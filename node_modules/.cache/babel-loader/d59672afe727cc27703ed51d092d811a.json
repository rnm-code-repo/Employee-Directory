{"ast":null,"code":"var _jsxFileName = \"/Users/rekha/Work/EmployeeDir/src/components/Employee/index.js\";\nimport React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport Search from \"../Search\";\nimport Moment from \"react-moment\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\nclass Employee extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      empData: [],\n      empList: [],\n      filterList: [],\n      currentSort: 'default',\n      searchInput: \"\"\n    };\n\n    this.onSortChange = () => {\n      const {\n        currentSort\n      } = this.state;\n      let nextSort;\n      if (currentSort === 'down') nextSort = 'up';else if (currentSort === 'up') nextSort = 'default';else if (currentSort === 'default') nextSort = 'down';\n      this.setState({\n        currentSort: nextSort\n      });\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        searchInput: event.target.value\n      });\n      console.log(\"---->>>\" + event.target.value);\n      let filterList = this.state.empData.filter(person => {\n        //console.log(person.name.first)\n        return person.name.first.includes(event.target.value) || person.name.last.includes(event.target.value) || person.email.includes(event.target.value) || person.phone.includes(event.target.value);\n      });\n      const empList = filterList;\n      this.setState({\n        empList\n      });\n      console.log(\">>>>>\" + filterList);\n    };\n  }\n\n  componentDidMount() {\n    API.getEmployees() //(\"https://randomuser.me/api/?nat=us&results=200\")\n    .then(res => {\n      const empData = res.data.results;\n      const empList = empData;\n      this.setState({\n        empData\n      });\n      this.setState({\n        empList\n      });\n    }).catch(err => console.log(err));\n  }\n\n  /*(event) => {\n    if (event.target.value.length > 0) {\n      console.log(event.target.value);\n      let array = this.state.empData.filter(person => {\n        console.log(person.name.first)\n        return person.name.first.toUpperCase().includes(event.target.value.toUpperCase()) \n            || person.name.last.toUpperCase().includes(event.target.value.toUpperCase())\n            || person.email.toUpperCase().includes(event.target.value.toUpperCase())\n            || person.phone.includes(event.target.value)\n      });\n      const empData = array;\n      this.setState({ empData });\n    } else {\n      const empData = this.state.empData\n      this.setState({ empData });\n    }\n  }*/\n  render() {\n    const {\n      currentSort\n    } = this.state;\n    let {\n      empData,\n      searchInput\n    } = this.state;\n    const sortTypes = {\n      up: {\n        class: 'sort-up',\n        fn: (a, b) => a.name.first > b.name.first ? 1 : -1\n      },\n      down: {\n        class: 'sort-down',\n        fn: (a, b) => a.name.first < b.name.first ? 1 : -1\n      },\n      default: {\n        class: 'sort',\n        fn: (a, b) => a\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      value: this.state.searchInput,\n      handleInputChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"light\",\n      style: {\n        maxWidth: \"90%\",\n        margin: \"auto\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Image\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, \"Name \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onSortChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `fas fa-${sortTypes[currentSort].class}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"DOB\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, //this.state.empData.map(data => (\n    [...this.state.empList].sort(sortTypes[currentSort].fn).map(data => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: data.picture.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, data.name.title, \". \", data.name.first, \", \", data.name.last), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, data.phone), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, data.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      format: \"MM-DD-YYYY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    }, data.dob.date)))))));\n  }\n\n}\n\nexport default Employee;","map":{"version":3,"sources":["/Users/rekha/Work/EmployeeDir/src/components/Employee/index.js"],"names":["React","Component","Table","Search","Moment","API","Employee","state","empData","empList","filterList","currentSort","searchInput","onSortChange","nextSort","setState","handleInputChange","event","target","value","console","log","filter","person","name","first","includes","last","email","phone","componentDidMount","getEmployees","then","res","data","results","catch","err","render","sortTypes","up","class","fn","a","b","down","default","maxWidth","margin","textAlign","sort","map","picture","thumbnail","title","dob","date"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport Search from \"../Search\"\nimport Moment from \"react-moment\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\nclass Employee extends Component {\n  state = {\n    empData: [],\n    empList: [],\n    filterList: [],\n    currentSort: 'default',\n    searchInput: \"\"\n  };\n\n  componentDidMount() {\n    API.getEmployees() //(\"https://randomuser.me/api/?nat=us&results=200\")\n      .then(res => {\n        const empData = res.data.results;\n        const empList = empData;\n        this.setState({ empData });\n        this.setState({ empList });\n      })\n      .catch(err => console.log(err));\n  }\n\n  onSortChange = () => {\n\t\tconst { currentSort } = this.state;\n\t\tlet nextSort;\n\n\t\tif (currentSort === 'down') nextSort = 'up';\n\t\telse if (currentSort === 'up') nextSort = 'default';\n\t\telse if (currentSort === 'default') nextSort = 'down';\n\n\t\tthis.setState({\n\t\t\tcurrentSort: nextSort\n\t\t});\n  };\n  \n\n  handleInputChange = event => {\n    this.setState({ searchInput: event.target.value });\n    console.log(\"---->>>\"+ event.target.value);\n    let filterList = this.state.empData.filter(person => {\n      //console.log(person.name.first)\n      return person.name.first.includes(event.target.value) \n          || person.name.last.includes(event.target.value)\n          || person.email.includes(event.target.value)\n          || person.phone.includes(event.target.value)\n    });\n    const empList = filterList;\n    this.setState({ empList });\n    console.log(\">>>>>\"+filterList)\n  }\n  \n  /*(event) => {\n    if (event.target.value.length > 0) {\n      console.log(event.target.value);\n      let array = this.state.empData.filter(person => {\n        console.log(person.name.first)\n        return person.name.first.toUpperCase().includes(event.target.value.toUpperCase()) \n            || person.name.last.toUpperCase().includes(event.target.value.toUpperCase())\n            || person.email.toUpperCase().includes(event.target.value.toUpperCase())\n            || person.phone.includes(event.target.value)\n      });\n      const empData = array;\n      this.setState({ empData });\n    } else {\n      const empData = this.state.empData\n      this.setState({ empData });\n    }\n  }*/\n\n  render() {\n    const { currentSort } = this.state;\n    let {empData, searchInput}  = this.state;\n    const sortTypes = {\n      up: {\n        class: 'sort-up',\n        fn: (a, b) => a.name.first > (b.name.first) ? 1 : -1\n      },\n      down: {\n        class: 'sort-down',\n        fn: (a, b) => a.name.first < (b.name.first) ? 1 : -1\n      },\n      default: {\n        class: 'sort',\n        fn: (a, b) => a\n      }\n    };\n    \n    return (\n\n      <div>\n        <Search value={this.state.searchInput} handleInputChange={this.handleInputChange}/>\n        <Table striped bordered hover variant=\"light\" style={{maxWidth: \"90%\", margin: \"auto\", textAlign: \"center\"}}>\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>Name <button onClick={this.onSortChange}>\n                        <i className={`fas fa-${sortTypes[currentSort].class}`} />\n                      </button>\n              </th>\n              <th>Phone</th>\n              <th>Email</th>\n              <th>DOB</th>\n            </tr>\n          </thead>\n          <tbody>\n\n            {\n              //this.state.empData.map(data => (\n                [...this.state.empList].sort(sortTypes[currentSort].fn).map(data => (\n                <tr>\n                  <td><img src={data.picture.thumbnail}/></td>\n                  <td>{data.name.title}. {data.name.first}, {data.name.last}</td>\n                  <td>{data.phone}</td>\n                  <td>{data.email}</td>\n                  <td><Moment format=\"MM-DD-YYYY\">{data.dob.date}</Moment></td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </Table>\n      </div>\n\n    );\n  }\n\n\n}\n\n\nexport default Employee;\n"]},"metadata":{},"sourceType":"module"}